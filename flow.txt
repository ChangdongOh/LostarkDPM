================================================================
dynamic layer flow
Main Flow
1. refresh skill queue, using policy
2. invoke skill and update buffs
3. update dynamic_multiplier of buffs_manager(stat_buff applied here)
4. calculate damage_buffs and add to damage_history
5. check attribute and deal with skill_buff, modifying dynamic_skill_multiplier(skill_buff applied here)
6. calculate skill damage and add to damage_history
7. refresh buff based on tick
================================================================
dpm_simulator, has character and managers to modify it
-single character(init, static)
-buffs_manager(stat_buff, skill_buff, damage_buff)
-policy_manager()
================================================================
buffs_manager, has queue of each type of buff
  init: character -> None(fill buff queue)
  create_short_term_character: (stat_buff, character) -> short-term character
  finalize_skill: (skill_buff, skill) -> actual skill(damage modified)
  calc_damage_buffs: (damage_buff, current tick) -> damage
  refresh_buffs: current tick -> None(refresh buff queue)
================================================================
policy_manager, 

================================================================
buff, has 3 types(stat, skill, damage)
stat_buff, has name, effects, expires_at
skill_buff, has name, conditions, effects, expires_at
damage_buff, has name, base_damage, coefficient, total_tick, expires_at
  apply_{type}_buff: apply buff
  is_expired: check if expired
================================================================
skill
================================================================
binding, list of skills
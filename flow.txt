================================================================
dynamic layer flow
Main Flow
1. reset character_stats
2. refresh skill queue, using policy
3. update character_stats with buffs_manager(stat_buff applied here)
4. calculate damage_buffs and add to damage_history(damage_buff applied here)
5. check attribute and deal with skill_buff, modifying dynamic_skill_multiplier(skill_buff applied here)
6. calculate skill damage and add to damage_history
7. refresh buff based on tick
================================================================
dpm_simulator, has character and managers to modify it
-single character(init, static)
-buffs_manager(stat_buff & damage_buff)
-skills_manager(policy)
-damage_history(damage statistics & simulation termination)
================================================================
buffs_manager, has queue of each type of buff
  init: character -> None(fill buff queue)
  calc_damage_buffs: (damage_buff, current tick) -> damage
  refresh_buffs: current tick -> None(refresh buff queue)
================================================================
skill_manager, 

================================================================
buff, has 2 types(stat, damage)
stat_buff, has name, effects, expires_at
damage_buff, has name, base_damage, coefficient, total_tick, expires_at
  apply_{type}_buff: apply buff
  is_expired: check if expired
================================================================
skill